services:
    db:
        image: postgres:15.0
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: my_database
        ports:
            - "5432:5432"
        networks:
            - app-network
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U user -d my_database -h localhost || exit 1" ]
            interval: 10s
            retries: 5
            start_period: 30s

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        volumes:
            - ./backend:/app
            - ./backend/.gradle:/root/.gradle
            - ${HOME}/.m2:/root/.m2
        ports:
            - "8080:8080"
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/my_database
            - SPRING_DATASOURCE_USERNAME=user
            - SPRING_DATASOURCE_PASSWORD=password
            - SPRING_DEVTOOLS_RESTART_ENABLED=true
            - SPRING_DEVTOOLS_RESTART_TRIGGER_FILE=.reload
        depends_on:
            db:
                condition: service_healthy
        networks:
            - app-network
        command: ./gradlew bootRun --no-daemon
        container_name: backend

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=development
            - NEXT_PUBLIC_API_BASE_URL=http://backend:8080
        networks:
            - app-network
        volumes:
            - ./frontend:/app
        command: npm run dev
        container_name: frontend

    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@example.com
            PGADMIN_DEFAULT_PASSWORD: admin
            PGADMIN_CONFIG_SERVER_MODE: "False"
            PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
        ports:
            - "8081:80"
        volumes:
            - ./servers.json:/pgadmin4/servers.json
        depends_on:
            - db
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
